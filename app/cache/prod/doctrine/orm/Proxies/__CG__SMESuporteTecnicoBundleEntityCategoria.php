<?php

namespace Proxies\__CG__\SME\SuporteTecnicoBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Categoria extends \SME\SuporteTecnicoBundle\Entity\Categoria implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'nome', 'categoriaPai', 'subcategorias', 'equipe', 'prioridade', 'chamados', 'tags', 'ativo');
        }

        return array('__isInitialized__', 'id', 'nome', 'categoriaPai', 'subcategorias', 'equipe', 'prioridade', 'chamados', 'tags', 'ativo');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Categoria $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getNomeHierarquico()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNomeHierarquico', array());

        return parent::getNomeHierarquico();
    }

    /**
     * {@inheritDoc}
     */
    public function getAllSubcategorias()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAllSubcategorias', array());

        return parent::getAllSubcategorias();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getNome()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNome', array());

        return parent::getNome();
    }

    /**
     * {@inheritDoc}
     */
    public function setNome($nome)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNome', array($nome));

        return parent::setNome($nome);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategoriaPai()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategoriaPai', array());

        return parent::getCategoriaPai();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategoriaPai(\SME\SuporteTecnicoBundle\Entity\Categoria $categoriaPai = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategoriaPai', array($categoriaPai));

        return parent::setCategoriaPai($categoriaPai);
    }

    /**
     * {@inheritDoc}
     */
    public function getEquipe()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEquipe', array());

        return parent::getEquipe();
    }

    /**
     * {@inheritDoc}
     */
    public function setEquipe($equipe)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEquipe', array($equipe));

        return parent::setEquipe($equipe);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrioridade()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrioridade', array());

        return parent::getPrioridade();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrioridade(\SME\SuporteTecnicoBundle\Entity\Prioridade $prioridade = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrioridade', array($prioridade));

        return parent::setPrioridade($prioridade);
    }

    /**
     * {@inheritDoc}
     */
    public function getAtivo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAtivo', array());

        return parent::getAtivo();
    }

    /**
     * {@inheritDoc}
     */
    public function setAtivo($ativo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAtivo', array($ativo));

        return parent::setAtivo($ativo);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubcategorias()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubcategorias', array());

        return parent::getSubcategorias();
    }

    /**
     * {@inheritDoc}
     */
    public function getChamados()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChamados', array());

        return parent::getChamados();
    }

    /**
     * {@inheritDoc}
     */
    public function getTags()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTags', array());

        return parent::getTags();
    }

    /**
     * {@inheritDoc}
     */
    public function setTags($tags)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTags', array($tags));

        return parent::setTags($tags);
    }

    /**
     * {@inheritDoc}
     */
    public function jsonSerialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'jsonSerialize', array());

        return parent::jsonSerialize();
    }

}
